.checkin_form
  = nested_form_for @checkin do |f|
    - if @checkin.errors.any?
      #error_explanation
        %h2= "#{pluralize(@checkin.errors.count, "error")} prohibited this checkin from being saved:"
        %ul
          - @checkin.errors.full_messages.each do |msg|
            %li= msg

    .map.checkin_form_box
      - if request.env['REQUEST_PATH'] === '/checkins/new'
        #map
      - if request.env['REQUEST_PATH'] === '/checkin/past'
        #past_map

      = f.hidden_field :latitude
      = f.hidden_field :longitude

    .assets.checkin_form_box
      .field
        %b Title:
        = f.text_field :title

      .field
        = f.fields_for :categories_checkins do |category_checkin|
          = category_checkin.collection_select :category_id, Category.belonging_to(current_user), :id, :name
          = category_checkin.link_to_remove "Remove Category"
        = f.link_to_add "Add Category", :categories_checkins

      .field
        = f.fields_for :categories do |category|
          = category.label :name
          = category.text_field :name
          = category.link_to_remove "Remove Category"
        = f.link_to_add "New Category", :categories

    .people.checkin_form_box
      .field
        = f.fields_for :people_checkins do |person|
          = person.select 'person_id', Person.all.collect { |x| [x.name,x.id ]}
          = person.link_to_remove "Remove Person"
        .add_button
          = f.link_to_add "Tag A Person", :people_checkins

      .field
        = f.fields_for :people do |person|
          = person.label :name
          = person.text_field :name
          = person.link_to_remove "Remove Person"
        = f.link_to_add "New Person", :people

    .assets.checkin_form_box
      .field
        = f.fields_for :assets do |asset|
          = asset.text_field :words
          = asset.file_field :media
          = asset.link_to_remove "Remove Asset"
        = f.link_to_add "Add an Asset", :assets

    .actions
      = f.submit 'Save', class: 'submit_button'
